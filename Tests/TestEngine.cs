using System.Windows.Controls;
using CoronGame.Logic;
using CoronGame.Maps;
using NUnit.Framework;

namespace CoronGame.Tests
{
    [TestFixture]
    public class TestEngine
    {
        [Test, Order(0)]
        public void CheckIsPlayerHitGameObject()
        {
            
        }
        
        [Test, Order(1)]
        public void CheckIsEnemyEntryToTheCave()
        {
            
        }
        
        [Test, Order(2)]
        public void CheckGenerateEnemyMove()
        {
            
        }
        
        [Test, Order(3)]
        public void CheckGenerateMoveToPlayer()
        {
            
        }
        
        [Test, Order(4)]
        public void CheckUpdate()
        {
            
        }
        
        #region Init

        private static int[,] board =
        {
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,},
            {0, 24, 23, 22, 21, 20, 19, 20, 21, 22, 21, 20, 19, 0,},
            {0, 23, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 18, 0,},
            {0, 22, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 17, 0,},
            {0, 21, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 16, 0,},
            {0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 13, 14, 15, 16,},
            {0, 21, 0, 0, 0, 0, 16, 0, 0, 11, 0, 0, 0, 0,},
            {0, 22, 0, 0, 0, 0, 17, 0, 0, 10, 0, 0, 0, 0,},
            {0, 23, 22, 21, 20, 19, 18, 0, 0, 9, 8, 7, 6, 0,},
            {0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 5, 0,},
            {0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 4, 0,},
            {0, 0, 0, 0, 0, 0, 14, 0, 0, 6, 5, 4, 3, 2,},
            {0, 0, 0, 0, 0, 0, 14, 0, 0, 7, 0, 0, 0, -1,},
            {0, 0, 0, 0, 0, 0, 12, 0, 0, 8, 0, -4, -3, -2,},
            {18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, -5, -4, -3,},
            {0, 0, 0, 0, 0, 0, 13, 0, 0, 10, 0, -6, -5, -4,},
            {0, 0, 0, 0, 0, 0, 14, 0, 0, 11, 0, 0, 0, 0,},
            {0, 0, 0, 0, 0, 0, 15, 0, 0, 12, 13, 14, 15, 16,},
            {0, 0, 0, 0, 0, 0, 16, 0, 0, 13, 0, 0, 0, 0,},
            {0, 0, 0, 0, 0, 0, 17, 0, 0, 14, 0, 0, 0, 0,},
            {0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 16, 17, 18, 0,},
            {0, 24, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 19, 0,},
            {0, 25, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 20, 0,},
            {0, 26, 27, 28, 0, 0, 21, 22, 23, 24, 23, 22, 21, 22,},
            {0, 0, 0, 29, 0, 0, 22, 0, 0, 25, 0, 0, 0, 0,},
            {0, 0, 0, 28, 0, 0, 23, 0, 0, 26, 0, 0, 0, 0,},
            {0, 29, 28, 27, 26, 25, 24, 0, 0, 27, 28, 29, 30, 0,},
            {0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0,},
            {0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0,},
            {0, 32, 33, 34, 35, 36, 37, 38, 37, 36, 35, 34, 33, 34,},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,},
        };

        private static Map map = new Map();

        private Engine engine = new Engine(map, new GameRenderer(new Canvas()));

        #endregion
    }
}